# -*- coding: utf-8 -*-
"""yoloV8_TraningFire

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-U94biVMOSnKnDNeFjJ0y_UwC-FUsAXN
"""

!pip install ultralytics

!wget https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n.pt

!wget https://github.com/ultralytics/assets/releases/download/v0.0.0/yolov8n-seg.pt

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/MyDrive

!echo 'train: /content/drive/MyDrive/data/train' >> data/mydataset.yaml
!echo 'val: /content/drive/MyDrive/data/train' >> data/mydataset.yaml
!echo 'nc: 2' >> data/mydataset.yaml
!echo "names: ['lửa_cháy','Khói']" >> data/mydataset.yaml

!yolo task=detect mode=train model=yolov8n.pt data=data/mydataset.yaml epochs=130 imgsz=640

!yolo task=detect mode=predict model="/content/drive/MyDrive/runs/detect/train/weights/best.pt" source="/content/drive/MyDrive/data/test/Fire.mp4"

import cv2
from ultralytics import YOLO

# Load the model
model = YOLO('/content/drive/MyDrive/runs/detect/train/weights/best.pt')

# Read the image
img = cv2.imread('/content/drive/MyDrive/data/train/images/Download_000047.jpg')

# Run prediction on the image
results = model.predict(img, stream=True)

# Iterate over the results
for result in results:
    boxes = result.boxes.cpu().numpy()  # Get boxes on CPU in numpy format
    for box in boxes:  # Iterate over boxes
        r = box.xyxy[0].astype(int)  # Get corner points as int
        class_id = int(box.cls[0])  # Get class ID
        class_name = model.names[class_id]  # Get class name using the class ID
        print(f"Class: {class_name}, Box: {r}")  # Print class name and box coordinates
        cv2.rectangle(img, r[:2], r[2:], (0, 255, 0), 2)  # Draw boxes on the image

# Display the output image
from google.colab.patches import cv2_imshow
cv2_imshow(img)
cv2.waitKey(0)
cv2.destroyAllWindows()